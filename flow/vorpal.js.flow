declare module 'vorpal' {
  declare type Args = string[];

  declare type AutoComplete = string[] |
    (input: string) => string[] |
    (input: string, callback: Function) => void |
    (input: string) => Promise<string[]> |
    { [key: string]: AutoComplete };

  declare export class Command {
    commands: Command[];
    options: Object[];
    constructor(name: string, parent: Vorpal): void;
    action(callback: (args: Args) => Promise<*>): this;
    alias(...aliases: string[]): this;
    autocomplete(list: AutoComplete): this;
    cancel(callback: () => void): this;
    delimiter(delimiter: string): this;
    description(desc: string): this;
    help(callback: (args: Args) => void): this;
    hidden(): this;
    option(flags: string, desc?: string, autocomplete?: AutoComplete): this;
    optionHelp(): string;
    parse(callback: (command: string, args: Args) => string): this;
    types(types: { [type: string]: string[] }): this;
    usage(content: string): this;
    validate(callback: (args: Args) => boolean | string): this;
  }

  declare export class UI {

  }

  declare export default class Vorpal {
    _command: ?Command;
    _delimiter: string;
    _version: string;
    commands: Command[];
    ui: UI;
    command(name: string, desc?: string, options?: Object): Command;
    catch(name: string, desc?: string, options?: Object): Command;
    default(name: string, desc?: string, options?: Object): Command;
    delimiter(delimiter: string): this;
    exec(cmd: string, args: string[], callback: () => void): Promise<*>;
    exit(options?: Object): void;
    find(name: string): Command;
    help(func: () => void): this;
    hide(): this;
    history(id: string): this;
    historyStoragePath(path: string): this;
    localStorage(id: string): this;
    log(...messages: string[]): this;
    mode(name: string, desc?: string, options?: Object): Command;
    parse(argv: string[], options?: Object): this;
    pipe(func: () => void): this;
    prompt(options: Object, callback: () => void): Promise<string>;
    show(): this;
    use(commands: Command[], options?: Object): this; // TODO
    version(version: string): this;
  }
}

declare module 'vorpal/dist/command' {
  import type { Command } from 'vorpal';

  declare export default Command;
}
