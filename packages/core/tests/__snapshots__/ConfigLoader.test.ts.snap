// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfigLoader findConfigInLocalFiles() errors if too many files are found 1`] = `"Multiple \\"testBoost\\" configuration files found. Only 1 may exist."`;

exports[`ConfigLoader loadConfig() errors if package.json has not been loaded 1`] = `"Cannot load configuration as \\"package.json\\" has not been loaded."`;

exports[`ConfigLoader loadConfig() from config folder errors if no files found 1`] = `"Local configuration file or package.json property could not be found."`;

exports[`ConfigLoader loadConfig() from config folder errors if too many files are found 1`] = `"Multiple \\"testBoost\\" configuration files found. Only 1 may exist."`;

exports[`ConfigLoader loadConfig() from package.json errors if not an object 1`] = `"Invalid configuration. Must be a plain object."`;

exports[`ConfigLoader loadConfig() from package.json supports custom blueprint 1`] = `"Invalid ConfigLoader field \\"foo\\". Must be a number."`;

exports[`ConfigLoader loadPackageJSON() errors if no package.json exists in current working directory 1`] = `"Local \\"package.json\\" could not be found. Please run the command in your project's root."`;

exports[`ConfigLoader parseAndExtend() errors if a non-string or non-object is provided 1`] = `"Invalid configuration. Must be a plain object."`;

exports[`ConfigLoader parseFile() errors for an non-absolute path 1`] = `"An absolute file path is required."`;

exports[`ConfigLoader parseFile() errors for an unsupported file format 1`] = `"Unsupported configuration file extension \\".txt\\"."`;

exports[`ConfigLoader parseFile() errors if an object is not returned 1`] = `"Invalid configuration file \\"bool.json\\". Must return a plain object."`;

exports[`ConfigLoader parseFile() errors if an object is not returned 2`] = `"Invalid configuration file \\"number.json\\". Must return a plain object."`;

exports[`ConfigLoader parseFile() errors if an object is not returned 3`] = `"Invalid configuration file \\"string.json\\". Must return a plain object."`;

exports[`ConfigLoader parseFile() errors if an object is not returned 4`] = `"Invalid configuration file \\"array.json\\". Must return a plain object."`;

exports[`ConfigLoader resolveExtendPaths() errors for an invalid extend path 1`] = `"Invalid \`extends\` configuration value \\"FooBarBaz\\"."`;

exports[`ConfigLoader resolveExtendPaths() errors if \`extends\` value is not a string 1`] = `"Invalid \`extends\` configuration value. Must be an array of strings."`;
