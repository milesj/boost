(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[758],{3633:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return c},contentTitle:function(){return d},metadata:function(){return u},toc:function(){return m},default:function(){return g}});var r=a(9603),n=a(120),o=(a(7378),a(5318)),s=a(7586),i=a(4535),p=a(517),l=["components"],c={title:"Crash reporting"},d=void 0,u={unversionedId:"crash",id:"crash",isDocsHomePage:!1,title:"Crash reporting",description:"Report important environmental information when an error occurs or a process crashes.",source:"@site/docs/crash.mdx",sourceDirName:".",slug:"/crash",permalink:"/docs/crash",editUrl:"https://github.com/milesj/boost/edit/master/website/docs/crash.mdx",version:"current",frontMatter:{title:"Crash reporting"},sidebar:"docs",previous:{title:"Configuration",permalink:"/docs/config"},next:{title:"Debugging",permalink:"/docs/debug"}},m=[{value:"Installation",id:"installation",children:[]},{value:"Reporting",id:"reporting",children:[]}],h={toc:m};function g(e){var t=e.components,a=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s.Z,{backend:!0,tooling:!0,api:"/api/debug",mdxType:"EnvBadges"}),(0,o.kt)("p",null,"Report important environmental information when an error occurs or a process crashes."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)(i.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"npm",value:"npm"}],mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @boost/debug\n"))),(0,o.kt)(p.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @boost/debug\n")))),(0,o.kt)("h2",{id:"reporting"},"Reporting"),(0,o.kt)("p",null,"Sometimes an application or script fails. Sometimes we want to write an error log with environmental\ninformation about the failure. Boost supports this exact scenario."),(0,o.kt)("p",null,"Take advantage of crash reporting by importing and instantiating the\n",(0,o.kt)("a",{parentName:"p",href:"/api/debug/class/CrashReporter"},(0,o.kt)("inlineCode",{parentName:"a"},"CrashReporter"))," class."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { CrashReporter } from '@boost/debug';\n\nconst reporter = new CrashReporter();\n")),(0,o.kt)("p",null,"The reporter supports a collection of chainable methods that log targeted information, grouped into\nsections. View the API for more information on these methods."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"reporter\n  .reportPackageVersions('@boost/*')\n  .reportBinaries()\n  .reportEnvVars()\n  .reportSystem();\n")),(0,o.kt)("p",null,"If you'd like to add your own section and label value pairs, use\n",(0,o.kt)("a",{parentName:"p",href:"/api/debug/class/CrashReporter#addSection"},(0,o.kt)("inlineCode",{parentName:"a"},"CrashReporter#addSection()")),", which requires a title,\nand ",(0,o.kt)("a",{parentName:"p",href:"/api/debug/class/CrashReporter#add"},(0,o.kt)("inlineCode",{parentName:"a"},"CrashReporter#add()")),", which accepts a label and one or\nmany values."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"reporter\n    .addSection('User')\n    .add('ID', user.id)\n    .add('Name', user.name)\n    .add('Location', user.address, user.country);\n")),(0,o.kt)("p",null,"Once all the information has been buffered, we can write the content to a log file by using\n",(0,o.kt)("a",{parentName:"p",href:"/api/debug/class/CrashReporter#write"},(0,o.kt)("inlineCode",{parentName:"a"},"CrashReporter#write()")),", which requires an absolute file\npath."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"reporter.write(path.join(process.cwd(), 'error.log'));\n")))}g.isMDXComponent=!0}}]);