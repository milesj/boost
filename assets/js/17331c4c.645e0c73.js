"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6743],{5318:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var o=t(7378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(t),m=r,d=f["".concat(s,".").concat(m)]||f[m]||p[m]||i;return t?o.createElement(d,a(a({ref:n},u),{},{components:t})):o.createElement(d,a({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=t[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6657:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return l},toc:function(){return c}});var o=t(5773),r=t(808),i=(t(7378),t(5318)),a=["components"],l={},s=void 0,c=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Documentation",id:"documentation",level:2}],u={toc:c};function p(e){var n=e.components,t=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/github/workflow/status/milesj/boost/Build",alt:"build status"}),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/npm/v/@boost/config",alt:"npm version"})),(0,i.kt)("p",null,"Powerful convention based finder, loader, and manager of both configuration and ignore files."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { Blueprint, Schemas } from '@boost/common';\nimport { Configuration } from '@boost/config';\n\ninterface ConfigFile {\n  debug: boolean;\n  sourceMaps: boolean;\n}\n\nclass ConfigManager extends Configuration<ConfigFile> {\n  blueprint({ bool }: Schemas): Blueprint<ConfigFile> {\n    return {\n      debug: bool(),\n      sourceMaps: bool(),\n    };\n  }\n}\n\nconst configManager = new ConfigManager('boost');\n\n// Load `.config/boost.js`, `boost.production.json`, `.boost.yaml`, etc\nconst { config } = await configManager.loadConfigFromRoot('.');\n\n// Load `.boostignore` files\nconst ignore = await configManager.loadIgnoreFromBranchToRoot('./some/deep/path');\n")),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Loads root configs (",(0,i.kt)("inlineCode",{parentName:"li"},".config/<name>.js"),") and branch configs (",(0,i.kt)("inlineCode",{parentName:"li"},".<name>.js"),")."),(0,i.kt)("li",{parentName:"ul"},"Loads ignore files (",(0,i.kt)("inlineCode",{parentName:"li"},".<name>ignore"),")."),(0,i.kt)("li",{parentName:"ul"},"Supports multiple config types: ",(0,i.kt)("inlineCode",{parentName:"li"},"js"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"cjs"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"mjs"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"json"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"yaml")),(0,i.kt)("li",{parentName:"ul"},"Supports environment and root-level based overrides."),(0,i.kt)("li",{parentName:"ul"},"Supports extending from other config files."),(0,i.kt)("li",{parentName:"ul"},"Finds files within each branch folder while traversing up the tree."),(0,i.kt)("li",{parentName:"ul"},"Caches finder results for increased efficiency."),(0,i.kt)("li",{parentName:"ul"},"Custom key-value setting processors.")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"yarn add @boost/config\n")),(0,i.kt)("h2",{id:"documentation"},"Documentation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://boostlib.dev/docs/config"},"https://boostlib.dev/docs/config")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://boostlib.dev/api/config"},"https://boostlib.dev/api/config"))))}p.isMDXComponent=!0}}]);