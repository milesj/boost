"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8122],{5318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),g=r,m=d["".concat(u,".").concat(g)]||d[g]||p[g]||i;return n?a.createElement(m,l(l({ref:t},c),{},{components:n})):a.createElement(m,l({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9798:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(7378),r=n(8944),i="tabItem_wHwb";function l(e){var t=e.children,n=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:n},t)}},3337:function(e,t,n){n.d(t,{Z:function(){return g}});var a=n(5773),r=n(7378),i=n(8944),l=n(6457),o=n(784),u=n(9947),s=n(3457),c="tabList_J5MA",p="tabItem_l0OV";function d(e){var t,n,l=e.lazy,d=e.block,g=e.defaultValue,m=e.values,b=e.groupId,f=e.className,v=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=m?m:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,o.l)(h,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===g?g:null!=(t=null!=g?g:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:v[0].props.value;if(null!==y&&!h.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,u.U)(),w=N.tabGroupChoices,E=N.setTabGroupChoices,O=(0,r.useState)(y),D=O[0],T=O[1],C=[],x=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var S=w[b];null!=S&&S!==D&&h.some((function(e){return e.value===S}))&&T(S)}var j=function(e){var t=e.currentTarget,n=C.indexOf(t),a=h[n].value;a!==D&&(x(t),T(a),null!=b&&E(b,String(a)))},_=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,r=C.indexOf(e.currentTarget)+1;n=null!=(a=C[r])?a:C[0];break;case"ArrowLeft":var i,l=C.indexOf(e.currentTarget)-1;n=null!=(i=C[l])?i:C[C.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},f)},h.map((function(e){var t=e.value,n=e.label,l=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:D===t?0:-1,"aria-selected":D===t,key:t,ref:function(e){return C.push(e)},onKeyDown:_,onFocus:j,onClick:j},l,{className:(0,i.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":D===t})}),null!=n?n:t)}))),l?(0,r.cloneElement)(v.filter((function(e){return e.props.value===D}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},v.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==D})}))))}function g(e){var t=(0,l.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},297:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(7378);function r(e){var t=e.children,n=e.type;return a.createElement("span",{className:"badge badge--"+n},t)}},2723:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(7378),r=n(1884),i=n(6125),l=n(297),o="badgeGroup_syf7",u="apiLink_JWAN";function s(e){var t=e.children;return a.createElement("span",{className:o},t)}function c(e){var t=e.api,n=e.backend,o=e.frontend,c=e.tooling;return a.createElement(a.Fragment,null,t&&a.createElement(r.default,{className:u,to:t},"API ",a.createElement(i.Z,null)),a.createElement(s,null,n&&a.createElement(l.Z,{type:"warning"},"Backend"),o&&a.createElement(l.Z,{type:"success"},"Frontend"),c&&a.createElement(l.Z,{type:"primary"},"Tooling")))}},2993:function(e,t,n){n.r(t),n.d(t,{assets:function(){return g},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return m}});var a=n(5773),r=n(808),i=(n(7378),n(5318)),l=n(2723),o=n(3337),u=n(9798),s=["components"],c={title:"Debugging"},p=void 0,d={unversionedId:"debug",id:"debug",title:"Debugging",description:"Lightweight debugging. Wraps the amazing debug library to",source:"@site/docs/debug.mdx",sourceDirName:".",slug:"/debug",permalink:"/docs/debug",draft:!1,editUrl:"https://github.com/milesj/boost/edit/master/website/docs/debug.mdx",tags:[],version:"current",frontMatter:{title:"Debugging"},sidebar:"docs",previous:{title:"Crash reporting",permalink:"/docs/crash"},next:{title:"Decorators",permalink:"/docs/decorators"}},g={},m=[{value:"Installation",id:"installation",level:2},{value:"Environment variables",id:"environment-variables",level:2},{value:"Debugging",id:"debugging",level:2},{value:"Invariant messages",id:"invariant-messages",level:3},{value:"Verbose output",id:"verbose-output",level:3},{value:"Silencing output",id:"silencing-output",level:3},{value:"Test utilities",id:"test-utilities",level:2}],b={toc:m};function f(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(l.Z,{backend:!0,tooling:!0,api:"/api/debug",mdxType:"EnvBadges"}),(0,i.kt)("p",null,"Lightweight debugging. Wraps the amazing ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/debug"},"debug")," library to\nprovide additional functionality."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)(o.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"npm",value:"npm"}],mdxType:"Tabs"},(0,i.kt)(u.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @boost/debug\n"))),(0,i.kt)(u.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @boost/debug\n")))),(0,i.kt)("h2",{id:"environment-variables"},"Environment variables"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BOOSTJS_DEBUG_NAMESPACE")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - A prefix for all debugger namespaces when created with\n",(0,i.kt)("inlineCode",{parentName:"li"},"createDebugger()"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BOOSTJS_DEBUG_VERBOSE")," (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),") - Print verbose messages logged from ",(0,i.kt)("inlineCode",{parentName:"li"},"debugger.verbose()"),",\notherwise they are hidden.")),(0,i.kt)("h2",{id:"debugging"},"Debugging"),(0,i.kt)("p",null,"Like ",(0,i.kt)("a",{parentName:"p",href:"/docs/log"},"logging"),', a "debugger" is a collection of functions that write to ',(0,i.kt)("inlineCode",{parentName:"p"},"process.stderr"),".\nThe key difference is that debug messages are only displayed if the ",(0,i.kt)("inlineCode",{parentName:"p"},"DEBUG")," environment variable is\nset and contains the debugger's namespace (logic provided by the\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/debug"},"debug")," package). The namespace can be defined when\ninstantiating a debugger using ",(0,i.kt)("a",{parentName:"p",href:"/api/debug/function/createDebugger"},(0,i.kt)("inlineCode",{parentName:"a"},"createDebugger")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { createDebugger } from '@boost/debug';\n\nconst debug = createDebugger('boost');\n\nprocess.env.DEBUG = 'boost:*';\n\ndebug('Something is broken!');\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"A namespace can either be a string or an array of strings.")),(0,i.kt)("p",null,"Each debug function that logs (excluding invariants) requires a message string as the 1st argument,\nand an optional rest of arguments to interpolate into the message using\n",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/api/util.html#util_util_format_format_args"},(0,i.kt)("inlineCode",{parentName:"a"},"util.format()")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"debug('Name: %s %s', user.first_name, user.last_name);\ndebug('Object: %O', data);\n")),(0,i.kt)("h3",{id:"invariant-messages"},"Invariant messages"),(0,i.kt)("p",null,"Invariant debugging logs either a success or a failure message, depending on the truthy evaluation\nof a condition. This can be achieved with\n",(0,i.kt)("a",{parentName:"p",href:"/api/debug/interface/Debugger#invariant"},(0,i.kt)("inlineCode",{parentName:"a"},"debugger.invariant()")),", which requires the condition to\nevaluate, a message to always display, and a success and failure message."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"debug.invariant(fs.existsSync(filePath), 'Does file exist?', 'Yes!', 'No');\n")),(0,i.kt)("h3",{id:"verbose-output"},"Verbose output"),(0,i.kt)("p",null,"Debug messages are already hidden behind the ",(0,i.kt)("inlineCode",{parentName:"p"},"DEBUG")," environment variable, but Boost takes it a step\nfurther to support verbose debugging. Messages logged with\n",(0,i.kt)("a",{parentName:"p",href:"/api/debug/interface/Debugger#verbose"},(0,i.kt)("inlineCode",{parentName:"a"},"debugger.verbose()"))," will not be displayed unless the\n",(0,i.kt)("inlineCode",{parentName:"p"},"BOOSTJS_DEBUG_VERBOSE")," environment variable is set -- even if ",(0,i.kt)("inlineCode",{parentName:"p"},"DEBUG")," is set."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// Will not write!\ndebug.verbose('We need extra information');\n\nprocess.env.BOOSTJS_DEBUG_VERBOSE = 'true';\n\n// Will write!\ndebug.verbose('We need extra information (again)');\n")),(0,i.kt)("h3",{id:"silencing-output"},"Silencing output"),(0,i.kt)("p",null,"By default, all logged messages are immediately written when ",(0,i.kt)("inlineCode",{parentName:"p"},"DEBUG")," contains the debugger\nnamespace. To silence output for a specific debugger, call the\n",(0,i.kt)("a",{parentName:"p",href:"/api/debug/interface/Debugger#disable"},(0,i.kt)("inlineCode",{parentName:"a"},"debugger.disable()"))," function, and to re-enable, call\n",(0,i.kt)("a",{parentName:"p",href:"/api/debug/interface/Debugger#enable"},(0,i.kt)("inlineCode",{parentName:"a"},"debugger.enable()")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"debug.disable();\n\n// Will not write!\ndebug('Something is broken!');\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Messages that are logged while silenced are ",(0,i.kt)("em",{parentName:"p"},"lost")," and are ",(0,i.kt)("em",{parentName:"p"},"not")," buffered.")),(0,i.kt)("h2",{id:"test-utilities"},"Test utilities"),(0,i.kt)("p",null,"A handful of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/facebook/jest"},"Jest")," utilities are available in the\n",(0,i.kt)("inlineCode",{parentName:"p"},"@boost/debug/test")," module. ",(0,i.kt)("a",{parentName:"p",href:"/api/debug-test"},"View the API for a full list"),"."))}f.isMDXComponent=!0}}]);