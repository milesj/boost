"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2709],{5318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7378);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=l,b=m["".concat(p,".").concat(d)]||m[d]||c[d]||r;return n?a.createElement(b,o(o({ref:t},u),{},{components:n})):a.createElement(b,o({ref:t},u))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9095:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var a=n(5773),l=n(808),r=(n(7378),n(5318)),o=["components"],i={title:"Prompts"},p=void 0,s={unversionedId:"cli/prompts",id:"cli/prompts",title:"Prompts",description:"Prompts are specialized React components for handling process.stdin input. All",source:"@site/docs/cli/prompts.md",sourceDirName:"cli",slug:"/cli/prompts",permalink:"/docs/cli/prompts",editUrl:"https://github.com/milesj/boost/edit/master/website/docs/cli/prompts.md",tags:[],version:"current",frontMatter:{title:"Prompts"},sidebar:"docs",previous:{title:"Components",permalink:"/docs/cli/components"},next:{title:"Common utilities",permalink:"/docs/common"}},u={},c=[{value:"Confirm",id:"confirm",level:2},{value:"HiddenInput",id:"hiddeninput",level:2},{value:"Controls",id:"controls",level:3},{value:"Input",id:"input",level:2},{value:"Controls",id:"controls-1",level:3},{value:"MultiSelect",id:"multiselect",level:2},{value:"Controls",id:"controls-2",level:3},{value:"PasswordInput",id:"passwordinput",level:2},{value:"Controls",id:"controls-3",level:3},{value:"Select",id:"select",level:2},{value:"Controls",id:"controls-4",level:3},{value:"Non-React",id:"non-react",level:2}],m={toc:c};function d(e){var t=e.components,i=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Prompts are specialized ",(0,r.kt)("a",{parentName:"p",href:"/docs/cli/components"},"React components")," for handling ",(0,r.kt)("inlineCode",{parentName:"p"},"process.stdin")," input. All\ncomponents can be imported from ",(0,r.kt)("inlineCode",{parentName:"p"},"@boost/cli/react"),"."),(0,r.kt)("h2",{id:"confirm"},"Confirm"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/api/cli/function/Confirm"},(0,r.kt)("inlineCode",{parentName:"a"},"Confirm"))," component provides a binary choice through the input of a\nsingle character. On submission, either a ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," value will be passed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Confirm } from '@boost/cli';\n\n<Confirm label=\"Do you want to continue?\" onSubmit={handleSubmit} />;\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Confirm example",src:n(5768).Z,width:"1620",height:"416"})),(0,r.kt)("h2",{id:"hiddeninput"},"HiddenInput"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/api/cli/function/HiddenInput"},(0,r.kt)("inlineCode",{parentName:"a"},"HiddenInput"))," component is a specialized ",(0,r.kt)("a",{parentName:"p",href:"#input"},(0,r.kt)("inlineCode",{parentName:"a"},"Input"))," that\naccepts user input, hides it from the console, and returns the entered string on submission."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { HiddenInput } from \'@boost/cli\';\n\n<HiddenInput label="What is your secret key?" placeholder="<key>" onSubmit={handleSubmit} />;\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Hidden input example",src:n(4595).Z,width:"1620",height:"416"})),(0,r.kt)("h3",{id:"controls"},"Controls"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Inherits all the same keyboard controls as ",(0,r.kt)("a",{parentName:"li",href:"#input"},"Input"),".")),(0,r.kt)("h2",{id:"input"},"Input"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/api/cli/function/Input"},(0,r.kt)("inlineCode",{parentName:"a"},"Input"))," component is a simple text prompt that takes user input and\nreturns a string. Supports standard typing, backspacing. On submission, the final ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," will be\ntrimmed of whitespace."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Input } from \'@boost/cli\';\n\n<Input\n    label="What is your name?"\n    placeholder="<name>"\n    onChange={handleChange}\n    onSubmit={handleSubmit}\n/>;\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Input example",src:n(2840).Z,width:"1620",height:"416"})),(0,r.kt)("h3",{id:"controls-1"},"Controls"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"\u2191"),", ",(0,r.kt)("kbd",null,"\u2193")," - Move cursor to the beginning or end of the entered text."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"\u2190"),", ",(0,r.kt)("kbd",null,"\u2192")," - Move cursor forward or backward 1 character."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"delete"),", ",(0,r.kt)("kbd",null,"backspace")," - Remove the previous character at the current cursor position."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"return")," - Submit the currently entered text.")),(0,r.kt)("h2",{id:"multiselect"},"MultiSelect"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/api/cli/function/MultiSelect"},(0,r.kt)("inlineCode",{parentName:"a"},"MultiSelect"))," component works in a similar fashion to\n",(0,r.kt)("a",{parentName:"p",href:"#select"},(0,r.kt)("inlineCode",{parentName:"a"},"Select")),", but allows for multiple values to be selected before submission."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { MultiSelect } from '@boost/cli';\n\n<MultiSelect\n    label=\"What is your favorite fruits?\"\n    defaultSelected={['banana']}\n    onChange={handleChange}\n    onSubmit={handleSubmit}\n    options={[\n        { label: '\ud83c\udf4e Apple', value: 'apple' },\n        { label: '\ud83c\udf4c Banana', value: 'banana' },\n        { label: '\ud83e\udd65 Coconut', value: 'coconut' },\n        { label: '\ud83c\udf47 Grapes', value: 'grapes' },\n        { label: '\ud83e\udd5d Kiwi', value: 'kiwi' },\n        { label: '\ud83c\udf4b Lemon', value: 'lemon' },\n        { label: '\ud83c\udf48 Melon', value: 'melon' },\n        { label: '\ud83c\udf4a Orange', value: 'orange' },\n        { label: '\ud83c\udf51 Peach', value: 'peach' },\n        { label: '\ud83c\udf50 Pear', value: 'pear' },\n        { label: '\ud83c\udf4d Pineapple', value: 'pineapple' },\n        { label: '\ud83c\udf53 Strawberry', value: 'strawberry' },\n        { label: '\ud83c\udf49 Watermelon', value: 'watermelon' },\n    ]}\n/>;\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Multiple select example",src:n(1470).Z,width:"1620",height:"488"})),(0,r.kt)("h3",{id:"controls-2"},"Controls"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"\u2191"),", ",(0,r.kt)("kbd",null,"\u2193")," - Move forward or backward through options in the list."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"\u2190"),", ",(0,r.kt)("kbd",null,"\u2192")," - Move to the beginning or end of the list."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"space")," - Select or unselect the currently highlighted option."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"return")," - Submit the currently selected options.")),(0,r.kt)("h2",{id:"passwordinput"},"PasswordInput"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/api/cli/function/PasswordInput"},(0,r.kt)("inlineCode",{parentName:"a"},"PasswordInput"))," component is a specialized ",(0,r.kt)("a",{parentName:"p",href:"#input"},(0,r.kt)("inlineCode",{parentName:"a"},"Input")),"\nthat masks user input and replaces each character with a star (",(0,r.kt)("inlineCode",{parentName:"p"},"*"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { PasswordInput } from \'@boost/cli\';\n\n<PasswordInput label="What is your password?" placeholder="<pass>" onSubmit={handleSubmit} />;\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Password input example",src:n(2266).Z,width:"1620",height:"416"})),(0,r.kt)("h3",{id:"controls-3"},"Controls"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Inherits all the same keyboard controls as ",(0,r.kt)("a",{parentName:"li",href:"#input"},"Input"),".")),(0,r.kt)("h2",{id:"select"},"Select"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/api/cli/function/Select"},(0,r.kt)("inlineCode",{parentName:"a"},"Select"))," component allows a value to be selected from a pre-defined\nlist of options. Supports standard keyboard navigation. To select or unselect a value, press the\nspace bar, or on submission, the currently highlighted option will be chosen."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Select } from '@boost/cli';\n\n<Select\n    label=\"What is your favorite fruit?\"\n    onSubmit={handleSubmit}\n    options={[\n        'apple',\n        'banana',\n        'coconut',\n        'grapes',\n        'kiwi',\n        'lemon',\n        'melon',\n        'orange',\n        'peach',\n        'pear',\n        'pineapple',\n        'strawberry',\n        'watermelon',\n    ]}\n/>;\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Select example",src:n(9633).Z,width:"1620",height:"488"})),(0,r.kt)("p",null,"Options can also be customized with objects, allowing a more unique ",(0,r.kt)("inlineCode",{parentName:"p"},"label")," to be provided. Options\ncan also be grouped by inserting ",(0,r.kt)("inlineCode",{parentName:"p"},"divider")," only options."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Select } from '@boost/cli';\n\n<Select\n    label=\"What is your favorite fruit?\"\n    onSubmit={handleSubmit}\n    options={[\n        { label: '\ud83c\udf4e Apple', value: 'apple' },\n        { label: '\ud83c\udf4c Banana', value: 'banana' },\n        { label: '\ud83e\udd65 Coconut', value: 'coconut' },\n        { label: '\ud83c\udf47 Grapes', value: 'grapes' },\n        { label: '\ud83e\udd5d Kiwi', value: 'kiwi' },\n        { label: '\ud83c\udf4b Lemon', value: 'lemon' },\n        { label: '\ud83c\udf48 Melon', value: 'melon' },\n        { label: '\ud83c\udf4a Orange', value: 'orange' },\n        { label: '\ud83c\udf51 Peach', value: 'peach' },\n        { label: '\ud83c\udf50 Pear', value: 'pear' },\n        { label: '\ud83c\udf4d Pineapple', value: 'pineapple' },\n        { label: '\ud83c\udf53 Strawberry', value: 'strawberry' },\n        { label: '\ud83c\udf49 Watermelon', value: 'watermelon' },\n    ]}\n/>;\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Select with labels example",src:n(6e3).Z,width:"1620",height:"488"})),(0,r.kt)("h3",{id:"controls-4"},"Controls"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"\u2191"),", ",(0,r.kt)("kbd",null,"\u2193")," - Move forward or backward through options in the list."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"\u2190"),", ",(0,r.kt)("kbd",null,"\u2192")," - Move to the beginning or end of the list."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"space")," - Select or unselect the currently highlighted option."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("kbd",null,"return")," - Submit the currently selected option, or the currently highlighted option if none are selected.")),(0,r.kt)("h2",{id:"non-react"},"Non-React"),(0,r.kt)("p",null,"If you would like to use prompts outside of React components and within the command space, sadly,\nthere is no built-in Boost solution. However, you can easily use a third-party solution like\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/enquirer/enquirer"},"enquirer"),". Just be sure to set ",(0,r.kt)("inlineCode",{parentName:"p"},"stdin")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"stdout")," streams\ncorrectly!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { prompt } from 'enquirer';\nimport { Command } from '@boost/cli';\n\nexport default class InitCommand extends Command {\n    async run() {\n        const { stdin, stdout } = this.getProgram().streams;\n\n        const { username } = await prompt({\n            type: 'input',\n            name: 'username',\n            message: 'What is your username?',\n            stdin,\n            stdout,\n        });\n    }\n}\n")))}d.isMDXComponent=!0},5768:function(e,t,n){t.Z=n.p+"assets/images/confirm-eec401a1ad5787093e3ca837093c1c5f.gif"},4595:function(e,t,n){t.Z=n.p+"assets/images/hidden-input-abdd4ee11917de7b071a9ec1cd3e974a.gif"},2840:function(e,t,n){t.Z=n.p+"assets/images/input-670675eb6f3db970cc5ff1bcd6e5de8d.gif"},1470:function(e,t,n){t.Z=n.p+"assets/images/multiselect-d8a2cd82f588a8a38206aea8803193f3.gif"},2266:function(e,t,n){t.Z=n.p+"assets/images/password-input-d6ca3c8202f463b432ce6b1b0560921d.gif"},6e3:function(e,t,n){t.Z=n.p+"assets/images/select-labels-55f1a1ef5423092ee0eab47f2bbf1f2f.gif"},9633:function(e,t,n){t.Z=n.p+"assets/images/select-cbddd6c1f7f631474ffb739fbc291e81.gif"}}]);