(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3548],{5318:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),f=o,d=m["".concat(u,".").concat(f)]||m[f]||s[f]||a;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},413:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},toc:function(){return p},default:function(){return s}});var r=n(9603),o=n(120),a=(n(7378),n(5318)),i=["components"],l={},u=void 0,p=[{value:"Features",id:"features",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Documentation",id:"documentation",children:[]}],c={toc:p};function s(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/milesj/boost/actions?query=branch%3Amaster"},(0,a.kt)("img",{parentName:"a",src:"https://github.com/milesj/boost/workflows/Build/badge.svg",alt:"Build Status"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@boost/plugin"},(0,a.kt)("img",{parentName:"a",src:"https://badge.fury.io/js/%40boost%25plugin.svg",alt:"npm version"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@boost/plugin"},(0,a.kt)("img",{parentName:"a",src:"https://david-dm.org/milesj/boost.svg?path=packages/plugin",alt:"npm deps"}))),(0,a.kt)("p",null,"Plugin based architecture that supports module loading, custom types, registries, scopes, and more."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Registry, Pluggable } from '@boost/plugin';\n\nexport interface Renderable<T> extends Pluggable<T> {\n    render(): string | Promise<string>;\n}\n\nconst registry = new Registry<Renderable>('boost', 'plugin', {\n    validate(plugin) {\n        if (typeof plugin.render !== 'function') {\n            throw new TypeError('Plugins require a `render()` method.');\n        }\n    },\n});\n\nconst plugin = await registry.load('boost-plugin-example');\n")),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Custom plugin types and registries."),(0,a.kt)("li",{parentName:"ul"},"Node module, file path, and configuration file loading strategies."),(0,a.kt)("li",{parentName:"ul"},"Multiple module name formats: public, scoped public, scoped private."),(0,a.kt)("li",{parentName:"ul"},"Structural contracts with life cycle events."),(0,a.kt)("li",{parentName:"ul"},"Factory function pattern for plugin creation."),(0,a.kt)("li",{parentName:"ul"},"Asynchronous by default.")),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn add @boost/plugin\n")),(0,a.kt)("h2",{id:"documentation"},"Documentation"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://boostlib.dev/docs/plugin"},"https://boostlib.dev/docs/plugin")))}s.isMDXComponent=!0}}]);