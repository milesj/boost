(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[322],{5318:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return u}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),u=a,k=d["".concat(p,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5218:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var r=n(9603),a=n(120),o=(n(7378),n(5318)),i=["components"],l={title:"Components"},p=void 0,s={unversionedId:"cli/components",id:"cli/components",isDocsHomePage:!1,title:"Components",description:"Boost provides the following components for use within your programs.",source:"@site/docs/cli/components.md",sourceDirName:"cli",slug:"/cli/components",permalink:"/docs/cli/components",editUrl:"https://github.com/milesj/boost/edit/master/website/docs/cli/components.md",version:"current",frontMatter:{title:"Components"},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/cli"},next:{title:"Prompts",permalink:"/docs/cli/prompts"}},c=[{value:"<code>Header</code>",id:"header",children:[{value:"Props",id:"props",children:[]}]},{value:"<code>Help</code>",id:"help",children:[{value:"Props",id:"props-1",children:[]}]},{value:"<code>Failure</code>",id:"failure",children:[{value:"Props",id:"props-2",children:[]}]},{value:"<code>Style</code>",id:"style",children:[{value:"Props",id:"props-3",children:[]}]}],m={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Boost provides the following components for use within your programs."),(0,o.kt)("h2",{id:"header"},(0,o.kt)("inlineCode",{parentName:"h2"},"Header")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Header")," component is simply that, a header! It renders an inverted background, with bold and\nuppercased text, and appropriate margins. It's what the ",(0,o.kt)("a",{parentName:"p",href:"#help"},"help")," and ",(0,o.kt)("a",{parentName:"p",href:"#failure"},"failure")," menus\nuse to separate and denote sections."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Header } from '@boost/cli';\n\n<Header label=\"About\" />;\n")),(0,o.kt)("h3",{id:"props"},"Props"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"label")," (",(0,o.kt)("inlineCode",{parentName:"li"},"string"),") - Text to display for the label. ",(0,o.kt)("em",{parentName:"li"},"(Required)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"marginBottom")," (",(0,o.kt)("inlineCode",{parentName:"li"},"number"),") - The bottom margin. Defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"marginTop")," (",(0,o.kt)("inlineCode",{parentName:"li"},"number"),") - The top margin. Defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"type")," (",(0,o.kt)("inlineCode",{parentName:"li"},"StyleType"),") - Customize the background color using ",(0,o.kt)("a",{parentName:"li",href:"#style"},"Style"),". Defaults to normal\ntext.")),(0,o.kt)("h2",{id:"help"},(0,o.kt)("inlineCode",{parentName:"h2"},"Help")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Help")," component can be used to render elegant command usage and help menus. It's a very complex\ncomponent that supports everything from command metadata to variadic params, all through the\nfollowing props (all optional)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Help } from '@boost/cli';\n\n<Help\n    header=\"Info\"\n    config={{ description: 'This is a very cool program', deprecated: true }}\n    params={[\n        {\n            description: 'Name',\n            type: 'string',\n        },\n    ]}\n/>;\n")),(0,o.kt)("h3",{id:"props-1"},"Props"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"categories")," (",(0,o.kt)("inlineCode",{parentName:"li"},"Record<string, Category>"),") - Mapping of ",(0,o.kt)("a",{parentName:"li",href:"/docs/cli#categories"},"categories")," to use\nfor command and option grouping."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"config")," (",(0,o.kt)("inlineCode",{parentName:"li"},"CommandConfig"),") - ",(0,o.kt)("a",{parentName:"li",href:"/docs/cli#config"},"Configuration")," metadata about the current\ncommand."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"commands")," (",(0,o.kt)("inlineCode",{parentName:"li"},"Record<string, CommandConfig>"),") - Mapping of ",(0,o.kt)("a",{parentName:"li",href:"/docs/cli#sub-commands"},"commands"),",\ntypically sub-commands."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"header")," (",(0,o.kt)("inlineCode",{parentName:"li"},"string"),") - A ",(0,o.kt)("a",{parentName:"li",href:"#header"},"header")," to display at the top of the output."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"options")," (",(0,o.kt)("inlineCode",{parentName:"li"},"Record<string, OptionConfig>"),") - Mapping of ",(0,o.kt)("a",{parentName:"li",href:"/docs/cli#options"},"options"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"params")," (",(0,o.kt)("inlineCode",{parentName:"li"},"ParamConfig[]"),") - List of ",(0,o.kt)("a",{parentName:"li",href:"/docs/cli#params"},"params"),".")),(0,o.kt)("h2",{id:"failure"},(0,o.kt)("inlineCode",{parentName:"h2"},"Failure")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Failure")," component can be used to render a beautiful failure menu, for an error and its stack\ntrace. The ",(0,o.kt)("inlineCode",{parentName:"p"},"error")," prop must be provided with an ",(0,o.kt)("inlineCode",{parentName:"p"},"Error")," instance."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Failure } from '@boost/cli';\n\n<Failure error={new Error('Something is broken!')} />;\n")),(0,o.kt)("h3",{id:"props-2"},"Props"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"error")," (",(0,o.kt)("inlineCode",{parentName:"li"},"Error"),") - The primary error to display in red. ",(0,o.kt)("em",{parentName:"li"},"(Required)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"hideStackTrace")," (",(0,o.kt)("inlineCode",{parentName:"li"},"boolean"),") - Hide the primary error stack trace. Defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"warnings")," (",(0,o.kt)("inlineCode",{parentName:"li"},"Error[]"),") - Optional errors as warnings to display in yellow.")),(0,o.kt)("h2",{id:"style"},(0,o.kt)("inlineCode",{parentName:"h2"},"Style")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Style")," component is special in that it renders and applies colors based on the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/cli#themes"},"chosen theme"),". It accomplishes this through the ",(0,o.kt)("inlineCode",{parentName:"p"},"type")," prop, which accepts one\nof the theme palette names."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Style } from '@boost/cli';\n\n<Style type=\"success\">Downloaded 123 packages</Style>;\n")),(0,o.kt)("p",null,"Furthermore, it also supports text styling similar to Ink's ",(0,o.kt)("inlineCode",{parentName:"p"},"Text")," component. This uses\n",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/chalk"},"chalk")," under the hood."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'<Style bold type="failure">\n    Failed to download packages\n</Style>\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"It's highly encouraged to use this component for all color based styling, so that consumers can\nalways use their chosen theme!")),(0,o.kt)("h3",{id:"props-3"},"Props"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"inverted")," (",(0,o.kt)("inlineCode",{parentName:"li"},"boolean"),") - Invert the colors to style the background instead of foreground. Defaults\nto ",(0,o.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"type")," (",(0,o.kt)("inlineCode",{parentName:"li"},"StyleType"),') - Theme palette name to style with. Accepts "default", "failure", "info",\n"inverted", "muted", "notice", "success", and "warning". Defaults to none.')))}d.isMDXComponent=!0}}]);