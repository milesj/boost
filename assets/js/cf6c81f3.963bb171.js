(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[516],{7288:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return c},contentTitle:function(){return m},metadata:function(){return u},toc:function(){return d},default:function(){return f}});var n=a(9603),r=a(120),i=(a(7378),a(5318)),s=a(7586),l=a(4535),o=a(517),p=["components"],c={title:"Terminal utilities"},m=void 0,u={unversionedId:"terminal",id:"terminal",isDocsHomePage:!1,title:"Terminal utilities",description:"A collection of utilities for managing and interacting with a terminal.",source:"@site/docs/terminal.mdx",sourceDirName:".",slug:"/terminal",permalink:"/docs/terminal",editUrl:"https://github.com/milesj/boost/edit/master/website/docs/terminal.mdx",version:"current",frontMatter:{title:"Terminal utilities"},sidebar:"docs",previous:{title:"Plugins",permalink:"/docs/plugin"},next:{title:"Translations",permalink:"/docs/translate"}},d=[{value:"Installation",id:"installation",children:[]},{value:"Cursor",id:"cursor",children:[]},{value:"Figures",id:"figures",children:[]},{value:"Screen",id:"screen",children:[]},{value:"Styles",id:"styles",children:[]},{value:"Text",id:"text",children:[]}],k={toc:d};function f(e){var t=e.components,a=(0,r.Z)(e,p);return(0,i.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(s.Z,{tooling:!0,api:"/api/terminal",mdxType:"EnvBadges"}),(0,i.kt)("p",null,"A collection of utilities for managing and interacting with a terminal."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)(l.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"npm",value:"npm"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @boost/terminal\n"))),(0,i.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @boost/terminal\n")))),(0,i.kt)("p",null,"There are many terminal based libraries and utilities available in the npm ecosystem, many of which\nBoost consolidates into a single package. The currently supported are as follows."),(0,i.kt)("h2",{id:"cursor"},"Cursor"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/api/terminal/namespace/cursor"},(0,i.kt)("inlineCode",{parentName:"a"},"cursor"))," object provides a set of\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/ansi-escapes"},"ANSI escapes codes")," for use in manipulating the\nterminal cursor."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { cursor } from '@boost/terminal';\n\nprocess.stdout.write(cursor.to(10, 10));\n")),(0,i.kt)("h2",{id:"figures"},"Figures"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"figures")," object provides a set of cross-platform symbols.\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/figures"},"View the official npm package for a full list"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { figures } from '@boost/terminal';\n\nprocess.stdout.write(figures.tick);\n")),(0,i.kt)("h2",{id:"screen"},"Screen"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/api/terminal/namespace/screen"},(0,i.kt)("inlineCode",{parentName:"a"},"screen"))," object provides a set of\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/ansi-escapes"},"ANSI escapes codes")," for use in manipulating the\nterminal screen."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { screen } from '@boost/terminal';\n\nprocess.stdout.write(screen.eraseLine);\n")),(0,i.kt)("h2",{id:"styles"},"Styles"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"style")," export is an instance of ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/chalk"},"chalk"),", for use in simple\ncolor and text styling."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { style } from '@boost/terminal';\n\nconst pass = style.bgGreen.black.bold(' PASS ');\n")),(0,i.kt)("h2",{id:"text"},"Text"),(0,i.kt)("p",null,"A handful of functions can be used to operate on ANSI-aware strings.\n",(0,i.kt)("a",{parentName:"p",href:"/api/terminal#Index"},"View the API for a full list of functions"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { calculateWidth } from '@boost/terminal';\n\ncalculateWidth('\u53e4'); // 2\n")))}f.isMDXComponent=!0}}]);