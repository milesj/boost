"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8122],{5318:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return g}});var a=t(7378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),s=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(t),g=r,m=d["".concat(u,".").concat(g)]||d[g]||p[g]||i;return t?a.createElement(m,l(l({ref:n},c),{},{components:t})):a.createElement(m,l({ref:n},c))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},517:function(e,n,t){var a=t(7378);n.Z=function(e){var n=e.children,t=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}},2120:function(e,n,t){t.d(n,{Z:function(){return d}});var a=t(5773),r=t(7378),i=t(6457),l=t(4956);var o=function(){var e=(0,r.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=t(6429),s=t(8944),c="tabItem_c0e5";function p(e){var n,t,a,i=e.lazy,l=e.block,p=e.defaultValue,d=e.values,g=e.groupId,m=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=d?d:b.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),v=(0,u.duplicates)(f,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===p?p:null!=(n=null!=p?p:null==(t=b.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=b[0])?void 0:a.props.value;if(null!==h&&!f.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=o(),y=k.tabGroupChoices,N=k.setTabGroupChoices,w=(0,r.useState)(h),E=w[0],O=w[1],D=[],T=(0,u.useScrollPositionBlocker)().blockElementScrollPositionUntilNextRender;if(null!=g){var C=y[g];null!=C&&C!==E&&f.some((function(e){return e.value===C}))&&O(C)}var x=function(e){var n=e.currentTarget,t=D.indexOf(n),a=f[t].value;a!==E&&(T(n),O(a),null!=g&&N(g,a))},S=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=D.indexOf(e.currentTarget)+1;t=D[a]||D[0];break;case"ArrowLeft":var r=D.indexOf(e.currentTarget)-1;t=D[r]||D[D.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":l},m)},f.map((function(e){var n=e.value,t=e.label;return r.createElement("li",{role:"tab",tabIndex:E===n?0:-1,"aria-selected":E===n,className:(0,s.Z)("tabs__item",c,{"tabs__item--active":E===n}),key:n,ref:function(e){return D.push(e)},onKeyDown:S,onFocus:x,onClick:x},null!=t?t:n)}))),i?(0,r.cloneElement)(b.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},b.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==E})}))))}function d(e){var n=(0,i.Z)();return r.createElement(p,(0,a.Z)({key:String(n)},e))}},297:function(e,n,t){t.d(n,{Z:function(){return r}});var a=t(7378);function r(e){var n=e.children,t=e.type;return a.createElement("span",{className:"badge badge--"+t},n)}},2723:function(e,n,t){t.d(n,{Z:function(){return c}});var a=t(7378),r=t(1884),i=t(8458),l=t(297),o="badgeGroup_2HOO",u="apiLink_32Vk";function s(e){var n=e.children;return a.createElement("span",{className:o},n)}function c(e){var n=e.api,t=e.backend,o=e.frontend,c=e.tooling;return a.createElement(a.Fragment,null,n&&a.createElement(r.default,{className:u,to:n},"API ",a.createElement(i.Z,null)),a.createElement(s,null,t&&a.createElement(l.Z,{type:"warning"},"Backend"),o&&a.createElement(l.Z,{type:"success"},"Frontend"),c&&a.createElement(l.Z,{type:"primary"},"Tooling")))}},2993:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return g},default:function(){return b}});var a=t(5773),r=t(808),i=(t(7378),t(5318)),l=t(2723),o=t(2120),u=t(517),s=["components"],c={title:"Debugging"},p=void 0,d={unversionedId:"debug",id:"debug",title:"Debugging",description:"Lightweight debugging. Wraps the amazing debug library to",source:"@site/docs/debug.mdx",sourceDirName:".",slug:"/debug",permalink:"/docs/debug",editUrl:"https://github.com/milesj/boost/edit/master/website/docs/debug.mdx",tags:[],version:"current",frontMatter:{title:"Debugging"},sidebar:"docs",previous:{title:"Crash reporting",permalink:"/docs/crash"},next:{title:"Decorators",permalink:"/docs/decorators"}},g=[{value:"Installation",id:"installation",children:[],level:2},{value:"Environment variables",id:"environment-variables",children:[],level:2},{value:"Debugging",id:"debugging",children:[{value:"Invariant messages",id:"invariant-messages",children:[],level:3},{value:"Verbose output",id:"verbose-output",children:[],level:3},{value:"Silencing output",id:"silencing-output",children:[],level:3}],level:2},{value:"Test utilities",id:"test-utilities",children:[],level:2}],m={toc:g};function b(e){var n=e.components,t=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)(l.Z,{backend:!0,tooling:!0,api:"/api/debug",mdxType:"EnvBadges"}),(0,i.kt)("p",null,"Lightweight debugging. Wraps the amazing ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/debug"},"debug")," library to\nprovide additional functionality."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)(o.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"npm",value:"npm"}],mdxType:"Tabs"},(0,i.kt)(u.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @boost/debug\n"))),(0,i.kt)(u.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @boost/debug\n")))),(0,i.kt)("h2",{id:"environment-variables"},"Environment variables"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BOOSTJS_DEBUG_NAMESPACE")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - A prefix for all debugger namespaces when created with\n",(0,i.kt)("inlineCode",{parentName:"li"},"createDebugger()"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BOOSTJS_DEBUG_VERBOSE")," (",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),") - Print verbose messages logged from ",(0,i.kt)("inlineCode",{parentName:"li"},"debugger.verbose()"),",\notherwise they are hidden.")),(0,i.kt)("h2",{id:"debugging"},"Debugging"),(0,i.kt)("p",null,"Like ",(0,i.kt)("a",{parentName:"p",href:"/docs/log"},"logging"),', a "debugger" is a collection of functions that write to ',(0,i.kt)("inlineCode",{parentName:"p"},"process.stderr"),".\nThe key difference is that debug messages are only displayed if the ",(0,i.kt)("inlineCode",{parentName:"p"},"DEBUG")," environment variable is\nset and contains the debugger's namespace (logic provided by the\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/debug"},"debug")," package). The namespace can be defined when\ninstantiating a debugger using ",(0,i.kt)("a",{parentName:"p",href:"/api/debug/function/createDebugger"},(0,i.kt)("inlineCode",{parentName:"a"},"createDebugger")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { createDebugger } from '@boost/debug';\n\nconst debug = createDebugger('boost');\n\nprocess.env.DEBUG = 'boost:*';\n\ndebug('Something is broken!');\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"A namespace can either be a string or an array of strings.")),(0,i.kt)("p",null,"Each debug function that logs (excluding invariants) requires a message string as the 1st argument,\nand an optional rest of arguments to interpolate into the message using\n",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/api/util.html#util_util_format_format_args"},(0,i.kt)("inlineCode",{parentName:"a"},"util.format()")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"debug('Name: %s %s', user.first_name, user.last_name);\ndebug('Object: %O', data);\n")),(0,i.kt)("h3",{id:"invariant-messages"},"Invariant messages"),(0,i.kt)("p",null,"Invariant debugging logs either a success or a failure message, depending on the truthy evaluation\nof a condition. This can be achieved with\n",(0,i.kt)("a",{parentName:"p",href:"/api/debug/interface/Debugger#invariant"},(0,i.kt)("inlineCode",{parentName:"a"},"debugger.invariant()")),", which requires the condition to\nevaluate, a message to always display, and a success and failure message."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"debug.invariant(fs.existsSync(filePath), 'Does file exist?', 'Yes!', 'No');\n")),(0,i.kt)("h3",{id:"verbose-output"},"Verbose output"),(0,i.kt)("p",null,"Debug messages are already hidden behind the ",(0,i.kt)("inlineCode",{parentName:"p"},"DEBUG")," environment variable, but Boost takes it a step\nfurther to support verbose debugging. Messages logged with\n",(0,i.kt)("a",{parentName:"p",href:"/api/debug/interface/Debugger#verbose"},(0,i.kt)("inlineCode",{parentName:"a"},"debugger.verbose()"))," will not be displayed unless the\n",(0,i.kt)("inlineCode",{parentName:"p"},"BOOSTJS_DEBUG_VERBOSE")," environment variable is set -- even if ",(0,i.kt)("inlineCode",{parentName:"p"},"DEBUG")," is set."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// Will not write!\ndebug.verbose('We need extra information');\n\nprocess.env.BOOSTJS_DEBUG_VERBOSE = 'true';\n\n// Will write!\ndebug.verbose('We need extra information (again)');\n")),(0,i.kt)("h3",{id:"silencing-output"},"Silencing output"),(0,i.kt)("p",null,"By default, all logged messages are immediately written when ",(0,i.kt)("inlineCode",{parentName:"p"},"DEBUG")," contains the debugger\nnamespace. To silence output for a specific debugger, call the\n",(0,i.kt)("a",{parentName:"p",href:"/api/debug/interface/Debugger#disable"},(0,i.kt)("inlineCode",{parentName:"a"},"debugger.disable()"))," function, and to re-enable, call\n",(0,i.kt)("a",{parentName:"p",href:"/api/debug/interface/Debugger#enable"},(0,i.kt)("inlineCode",{parentName:"a"},"debugger.enable()")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"debug.disable();\n\n// Will not write!\ndebug('Something is broken!');\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Messages that are logged while silenced are ",(0,i.kt)("em",{parentName:"p"},"lost")," and are ",(0,i.kt)("em",{parentName:"p"},"not")," buffered.")),(0,i.kt)("h2",{id:"test-utilities"},"Test utilities"),(0,i.kt)("p",null,"A handful of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/facebook/jest"},"Jest")," utilities are available in the\n",(0,i.kt)("inlineCode",{parentName:"p"},"@boost/debug/test")," module. ",(0,i.kt)("a",{parentName:"p",href:"/api/debug-test"},"View the API for a full list"),"."))}b.isMDXComponent=!0}}]);