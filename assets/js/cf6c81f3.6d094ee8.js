(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[516],{5318:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(k,l(l({ref:t},p),{},{components:n})):a.createElement(k,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},517:function(e,t,n){"use strict";var a=n(7378);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},4535:function(e,t,n){"use strict";n.d(t,{Z:function(){return u}});var a=n(7378),r=n(4956);var i=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=n(8944),o="tabItem_c0e5",s="tabItemActive_28AG";var c=37,p=39;var u=function(e){var t=e.lazy,n=e.block,r=e.defaultValue,u=e.values,m=e.groupId,d=e.className,k=i(),h=k.tabGroupChoices,f=k.setTabGroupChoices,g=(0,a.useState)(r),N=g[0],b=g[1],v=a.Children.toArray(e.children),w=[];if(null!=m){var C=h[m];null!=C&&C!==N&&u.some((function(e){return e.value===C}))&&b(C)}var y=function(e){var t=e.currentTarget,n=w.indexOf(t),a=u[n].value;b(a),null!=m&&(f(m,a),setTimeout((function(){var e,n,a,r,i,l,o,c;(e=t.getBoundingClientRect(),n=e.top,a=e.left,r=e.bottom,i=e.right,l=window,o=l.innerHeight,c=l.innerWidth,n>=0&&i<=c&&r<=o&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},x=function(e){var t,n;switch(e.keyCode){case p:var a=w.indexOf(e.target)+1;n=w[a]||w[0];break;case c:var r=w.indexOf(e.target)-1;n=w[r]||w[w.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},d)},u.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,className:(0,l.Z)("tabs__item",o,{"tabs__item--active":N===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:x,onFocus:y,onClick:y},n)}))),t?(0,a.cloneElement)(v.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}},4956:function(e,t,n){"use strict";var a=(0,n(7378).createContext)(void 0);t.Z=a},297:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var a=n(7378);function r(e){var t=e.children,n=e.type;return a.createElement("span",{className:"badge badge--"+n},t)}},7586:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var a=n(7378),r=n(297),i="badgeGroup_2HOO";function l(e){var t=e.children;return a.createElement("span",{className:i},t)}function o(e){var t=e.backend,n=e.frontend,i=e.tooling;return a.createElement(l,null,t&&a.createElement(r.Z,{type:"warning"},"Backend"),n&&a.createElement(r.Z,{type:"success"},"Frontend"),i&&a.createElement(r.Z,{type:"primary"},"Tooling"))}},7288:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return m},toc:function(){return d},default:function(){return h}});var a=n(9603),r=n(120),i=(n(7378),n(5318)),l=n(7586),o=n(4535),s=n(517),c=["components"],p={title:"Terminal utilities"},u=void 0,m={unversionedId:"terminal",id:"terminal",isDocsHomePage:!1,title:"Terminal utilities",description:"A collection of utilities for managing and interacting with a terminal.",source:"@site/docs/terminal.mdx",sourceDirName:".",slug:"/terminal",permalink:"/docs/terminal",editUrl:"https://github.com/milesj/boost/edit/master/website/docs/terminal.mdx",version:"current",frontMatter:{title:"Terminal utilities"},sidebar:"docs",previous:{title:"Plugins",permalink:"/docs/plugin"},next:{title:"Translations",permalink:"/docs/translate"}},d=[{value:"Installation",id:"installation",children:[]},{value:"Cursor",id:"cursor",children:[]},{value:"Figures",id:"figures",children:[]},{value:"Screen",id:"screen",children:[]},{value:"Styles",id:"styles",children:[]},{value:"Text",id:"text",children:[{value:"<code>annotate</code>",id:"annotate",children:[]},{value:"<code>calculateWidth</code>",id:"calculatewidth",children:[]},{value:"<code>hasAnsi</code>",id:"hasansi",children:[]},{value:"<code>link</code>",id:"link",children:[]},{value:"<code>sliceAnsi</code>",id:"sliceansi",children:[]},{value:"<code>stripAnsi</code>",id:"stripansi",children:[]},{value:"<code>truncate</code>",id:"truncate",children:[]},{value:"<code>wrapAnsi</code>",id:"wrapansi",children:[]}]}],k={toc:d};function h(e){var t=e.components,n=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(l.Z,{tooling:!0,mdxType:"EnvBadges"}),(0,i.kt)("p",null,"A collection of utilities for managing and interacting with a terminal."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)(o.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @boost/terminal\n"))),(0,i.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @boost/terminal\n")))),(0,i.kt)("p",null,"There are many terminal based libraries and utilities available in the NPM ecosystem, many of which\nBoost consolidates into a single package. The currently supported are as follows."),(0,i.kt)("h2",{id:"cursor"},"Cursor"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"cursor")," object provides a set of\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/ansi-escapes"},"ANSI escapes codes")," for use in manipulating the\nterminal cursor."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { cursor } from '@boost/terminal';\n\nprocess.stdout.write(cursor.to(10, 10));\n")),(0,i.kt)("p",null,"The following properties are available."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"backward")," (",(0,i.kt)("inlineCode",{parentName:"li"},"(count: number) => string"),") - Number of columns to move backward. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"down")," (",(0,i.kt)("inlineCode",{parentName:"li"},"(count: number) => string"),") - Number of rows to move down. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"forward")," (",(0,i.kt)("inlineCode",{parentName:"li"},"(count: number) => string"),") - Number of columns to move forward. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hide")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Hide the cursor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nextLine")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Move cursor to the next line."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"position")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Return the current cursur position."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"prevLine")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Move cursor to the previous line."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"restorePosition")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Restores the cursor position/state."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"savePosition")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Saves the cursor position/state."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"show")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Show the cursor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"startLine")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Move cursor to the start of the current line."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"to")," (",(0,i.kt)("inlineCode",{parentName:"li"},"(x: number, y?: number) => string"),") - Set the relative position of the cursor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"toAbsolute")," (",(0,i.kt)("inlineCode",{parentName:"li"},"(x: number, y?: number) => string"),") - Set the absolute position of the cursor,\nstarting from the top left."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"up")," (",(0,i.kt)("inlineCode",{parentName:"li"},"(count: number) => string"),") - Number of rows to move up. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),".")),(0,i.kt)("h2",{id:"figures"},"Figures"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"figures")," object provides a set of cross-platform symbols.\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/figures"},"View the official NPM package for a full list"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { figures } from '@boost/terminal';\n\nprocess.stdout.write(figures.tick);\n")),(0,i.kt)("h2",{id:"screen"},"Screen"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"screen")," object provides a set of\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/ansi-escapes"},"ANSI escapes codes")," for use in manipulating the\nterminal screen."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { screen } from '@boost/terminal';\n\nprocess.stdout.write(screen.eraseLine);\n")),(0,i.kt)("p",null,"The following properties are available."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clear")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Clear the terminal screen."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clearTerminal")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Clear the whole terminal, including scrollback buffer."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"erase")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Erase the screen and move the cursor the top left position."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"eraseDown")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Erase the screen from the current line down to the bottom of the screen."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"eraseEndLine")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Erase from the current cursor position to the end of the current line."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"eraseLine")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Erase the entire current line."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"eraseLines")," (",(0,i.kt)("inlineCode",{parentName:"li"},"(count: number) => string"),") - Erase from the current cursor position up the\nspecified amount of rows."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"eraseStartLine")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Erase from the current cursor position to the start of the current\nline."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"eraseUp")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Erase the screen from the current line up to the top of the screen."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scrollDown")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Scroll down the screen by 1 line."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scrollUp")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),") - Scroll up the screen by 1 line."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"size")," (",(0,i.kt)("inlineCode",{parentName:"li"},"() => Size"),") - Reliably and accurately get the screen size (in ",(0,i.kt)("inlineCode",{parentName:"li"},"columns")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"rows"),").")),(0,i.kt)("h2",{id:"styles"},"Styles"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"style")," export is an instance of ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/chalk"},"chalk"),", for use in simple\ncolor and text styling."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { style } from '@boost/terminal';\n\nconst pass = style.bgGreen.black.bold(' PASS ');\n")),(0,i.kt)("h2",{id:"text"},"Text"),(0,i.kt)("p",null,"The following functions can be used to operate on ANSI-aware strings."),(0,i.kt)("h3",{id:"annotate"},(0,i.kt)("inlineCode",{parentName:"h3"},"annotate")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"annotate(text: string, annotation: string): string")),(0,i.kt)("p",null,"Can be used to wrap a piece of text with a visual annotation ",(0,i.kt)("em",{parentName:"p"},"(iTerm only)"),". If a terminal does not\nsupport annotations, it will pass the text through."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { annotate } from '@boost/terminal';\n\nconst text = annotate('fileName.js', fullFilePath);\n")),(0,i.kt)("h3",{id:"calculatewidth"},(0,i.kt)("inlineCode",{parentName:"h3"},"calculateWidth")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"calculateWidth(text: string): number")),(0,i.kt)("p",null,"Calculate and return the visual width of a string (number of terminal columns required) using\n",(0,i.kt)("inlineCode",{parentName:"p"},"calculateWidth(text: string)"),". Based on ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/string-width"},"string-width"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { calculateWidth } from '@boost/terminal';\n\ncalculateWidth('\u53e4'); // 2\n")),(0,i.kt)("h3",{id:"hasansi"},(0,i.kt)("inlineCode",{parentName:"h3"},"hasAnsi")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"hasAnsi(text: string): boolean")),(0,i.kt)("p",null,"Returns true if the string contains ANSI escape codes. Based on\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/ansi-regex"},"ansi-regex"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { hasAnsi } from '@boost/terminal';\n\nhasAnsi('\\u001B[4mTest\\u001B[0m'); // true\n")),(0,i.kt)("h3",{id:"link"},(0,i.kt)("inlineCode",{parentName:"h3"},"link")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"link(text: string, url: string): string;")),(0,i.kt)("p",null,"Can be used to wrap a piece of text in an ANSI escape code hyperlink. If a terminal does not support\nhyperlinks, it will pass the text through."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { link } from '@boost/terminal';\n\nconst text = link('Read the manual', 'https://boostlib.dev');\n")),(0,i.kt)("h3",{id:"sliceansi"},(0,i.kt)("inlineCode",{parentName:"h3"},"sliceAnsi")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"sliceAnsi(text: string, start: number, end?: number): string")),(0,i.kt)("p",null,"Slice a string while preserving ANSI escape codes. Based on\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/slice-ansi"},"slice-ansi"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { sliceAnsi } from '@boost/terminal';\n\nconst text = sliceAnsi(aStringThatMayContainAnsi, 15, 25);\n")),(0,i.kt)("h3",{id:"stripansi"},(0,i.kt)("inlineCode",{parentName:"h3"},"stripAnsi")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"stripAnsi(text: string): string")),(0,i.kt)("p",null,"Strip all ANSI escape codes from the provided string. Based on\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/strip-ansi"},"strip-ansi"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { stripAnsi } from '@boost/terminal';\n\nconst text = stripAnsi(aStringThatContainsAnsi);\n")),(0,i.kt)("h3",{id:"truncate"},(0,i.kt)("inlineCode",{parentName:"h3"},"truncate")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"truncate(text: string, width: number, options?: TruncateOptions): string")),(0,i.kt)("p",null,"Truncate a string to a desired terminal width while preserving ANSI escape codes, Unicode surrogate\npairs, and fullwidth characters. Based on\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/cli-truncate"},"cli-truncate"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { truncate } from '@boost/terminal';\n\nconst text = truncate(aStringThatMayContainAnsi, 10, { position: 'middle' });\n")),(0,i.kt)("h3",{id:"wrapansi"},(0,i.kt)("inlineCode",{parentName:"h3"},"wrapAnsi")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"wrapAnsi(text: string, width: number, options?: WrapOptions): string")),(0,i.kt)("p",null,"Wrap a string that contains ANSI escape codes to a desired terminal width. Based on\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/wrap-ansi"},"wrap-ansi"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { wrapAnsi } from '@boost/terminal';\n\nconst text = wrapAnsi(aStringThatContainsAnsi, 20);\n")))}h.isMDXComponent=!0},8944:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})}}]);