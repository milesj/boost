(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{78:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return c})),t.d(a,"metadata",(function(){return p})),t.d(a,"rightToc",(function(){return s})),t.d(a,"default",(function(){return i}));var n=t(2),o=t(6),r=(t(0),t(86)),c={title:"Project"},p={unversionedId:"common/project",id:"common/project",isDocsHomePage:!1,title:"Project",description:"A Project class provides workspace and package metadata for a project. A project is denoted by a",source:"@site/docs/common/project.md",slug:"/common/project",permalink:"/docs/common/project",editUrl:"https://github.com/milesj/boost/edit/master/website/docs/common/project.md",version:"current",sidebar:"docs",previous:{title:"PathResolver",permalink:"/docs/common/path-resolver"},next:{title:"Configuration",permalink:"/docs/config"}},s=[{value:"Workspaces",id:"workspaces",children:[]},{value:"API",id:"api",children:[{value:"<code>getPackage</code>",id:"getpackage",children:[]},{value:"<code>getWorkspaceGlobs</code>",id:"getworkspaceglobs",children:[]},{value:"<code>getWorkspacePackages</code>",id:"getworkspacepackages",children:[]},{value:"<code>getWorkspacePackagePaths</code>",id:"getworkspacepackagepaths",children:[]}]}],l={rightToc:s};function i(e){var a=e.components,t=Object(o.a)(e,["components"]);return Object(r.a)("wrapper",Object(n.a)({},l,t,{components:a,mdxType:"MDXLayout"}),Object(r.a)("p",null,"A ",Object(r.a)("inlineCode",{parentName:"p"},"Project")," class provides workspace and package metadata for a project. A project is denoted by a\nroot ",Object(r.a)("inlineCode",{parentName:"p"},"package.json")," file and abides the NPM and Node.js module pattern. To begin, import and\ninstantiate the ",Object(r.a)("inlineCode",{parentName:"p"},"Project")," class with a path to the project's root."),Object(r.a)("pre",null,Object(r.a)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"import { Project } from '@boost/common';\n\nconst project = new Project();\n")),Object(r.a)("blockquote",null,Object(r.a)("p",{parentName:"blockquote"},"Root defaults to ",Object(r.a)("inlineCode",{parentName:"p"},"process.cwd()")," if not provided.")),Object(r.a)("h2",{id:"workspaces"},"Workspaces"),Object(r.a)("p",null,"The primary feature of this class is to extract metadata about a project's workspaces. Workspaces\nare used to support multi-package architectures known as monorepos, typically through\n",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"https://yarnpkg.com/features/workspaces"}),"Yarn"),", ",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"https://pnpm.js.org/en/pnpm-workspace_yaml"}),"PNPM"),",\nor ",Object(r.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/lerna/lerna#lernajson"}),"Lerna"),". In Boost, our implementation of workspaces\naligns with:"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},Object(r.a)("strong",{parentName:"li"},"Project")," - Typically a repository with a root ",Object(r.a)("inlineCode",{parentName:"li"},"package.json"),". Can either be a collection of\npackages, or a package itself."),Object(r.a)("li",{parentName:"ul"},Object(r.a)("strong",{parentName:"li"},"Package")," - A folder with a ",Object(r.a)("inlineCode",{parentName:"li"},"package.json")," file that represents an NPM package. Contains source\nand test files specific to the package."),Object(r.a)("li",{parentName:"ul"},Object(r.a)("strong",{parentName:"li"},"Workspace")," - A folder that houses one or many packages.")),Object(r.a)("h2",{id:"api"},"API"),Object(r.a)("h3",{id:"getpackage"},Object(r.a)("inlineCode",{parentName:"h3"},"getPackage")),Object(r.a)("blockquote",null,Object(r.a)("p",{parentName:"blockquote"},"Project#getPackage<T extends PackageStructure",">","(): T")),Object(r.a)("p",null,"Return the contents of the ",Object(r.a)("inlineCode",{parentName:"p"},"package.json")," found in the defined root path."),Object(r.a)("pre",null,Object(r.a)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"const pkg = project.getPackage();\n")),Object(r.a)("h3",{id:"getworkspaceglobs"},Object(r.a)("inlineCode",{parentName:"h3"},"getWorkspaceGlobs")),Object(r.a)("blockquote",null,Object(r.a)("p",{parentName:"blockquote"},"Project#getWorkspaceGlobs(options?: ProjectSearchOptions): FilePath[]")),Object(r.a)("p",null,"Returns a list of all workspaces globs as they are defined in ",Object(r.a)("inlineCode",{parentName:"p"},"package.json")," (under ",Object(r.a)("inlineCode",{parentName:"p"},"workspaces"),"),\n",Object(r.a)("inlineCode",{parentName:"p"},"lerna.json")," (under ",Object(r.a)("inlineCode",{parentName:"p"},"packages"),"), or ",Object(r.a)("inlineCode",{parentName:"p"},"pnpm-workspace.yaml")," (under ",Object(r.a)("inlineCode",{parentName:"p"},"packages"),")."),Object(r.a)("pre",null,Object(r.a)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"const globs = project.getWorkspaceGlobs(); // => ['packages/*']\n")),Object(r.a)("h3",{id:"getworkspacepackages"},Object(r.a)("inlineCode",{parentName:"h3"},"getWorkspacePackages")),Object(r.a)("blockquote",null,Object(r.a)("p",{parentName:"blockquote"},"Project#getWorkspacePackages<T extends PackageStructure",">","(): WorkspacePackage<T",">","[]")),Object(r.a)("p",null,"Return all ",Object(r.a)("inlineCode",{parentName:"p"},"package.json"),"s from all workspace packages. Once loaded, append workspace path metadata."),Object(r.a)("pre",null,Object(r.a)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"const pkgs = project.getWorkspacePackages();\n")),Object(r.a)("h3",{id:"getworkspacepackagepaths"},Object(r.a)("inlineCode",{parentName:"h3"},"getWorkspacePackagePaths")),Object(r.a)("blockquote",null,Object(r.a)("p",{parentName:"blockquote"},"Project#getWorkspacePackagePaths(options?: ProjectSearchOptions): FilePath[]")),Object(r.a)("p",null,"Returns a list of file system paths for all workspaces packages."),Object(r.a)("pre",null,Object(r.a)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"const paths = project.getWorkspacePackagePaths(); // => ['packages/foo', 'packages/bar']\n")))}i.isMDXComponent=!0},86:function(e,a,t){"use strict";t.d(a,"a",(function(){return j}));var n=t(0),o=t.n(n);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function c(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?c(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),i=function(e){var a=o.a.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):p(p({},a),e)),t},u={inlineCode:"code",wrapper:function(e){var a=e.children;return o.a.createElement(o.a.Fragment,{},a)}},b=o.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=i(t),j=n,d=b["".concat(c,".").concat(j)]||b[j]||u[j]||r;return t?o.a.createElement(d,p(p({ref:a},l),{},{components:t})):o.a.createElement(d,p({ref:a},l))}));function j(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,c=new Array(r);c[0]=b;var p={};for(var s in a)hasOwnProperty.call(a,s)&&(p[s]=a[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,c[1]=p;for(var l=2;l<r;l++)c[l]=t[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);