(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),u=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=u(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},p=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),b=u(n),p=a,d=b["".concat(c,".").concat(p)]||b[p]||m[p]||r;return n?o.a.createElement(d,l(l({ref:t},s),{},{components:n})):o.a.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var s=2;s<r;s++)c[s]=n[s];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},103:function(e,t,n){"use strict";function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}t.a=function(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}},104:function(e,t,n){"use strict";var a=n(0),o=n(105);t.a=function(){var e=Object(a.useContext)(o.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},105:function(e,t,n){"use strict";var a=n(0),o=Object(a.createContext)(void 0);t.a=o},106:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(0),o=n.n(a);function r(e){var t=e.children,n=e.type;return o.a.createElement("span",{className:"badge badge--"+n},t)}},107:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(104),c=n(103),l=n(56),i=n.n(l),s=37,u=39;t.a=function(e){var t=e.lazy,n=e.block,l=e.defaultValue,b=e.values,m=e.groupId,p=e.className,d=Object(r.a)(),h=d.tabGroupChoices,f=d.setTabGroupChoices,O=Object(a.useState)(l),g=O[0],j=O[1],y=a.Children.toArray(e.children);if(null!=m){var v=h[m];null!=v&&v!==g&&b.some((function(e){return e.value===v}))&&j(v)}var x=function(e){j(e),null!=m&&f(m,e)},N=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},p)},b.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(c.a)("tabs__item",i.a.tabItem,{"tabs__item--active":g===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case u:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(N,e.target,e)},onFocus:function(){return x(t)},onClick:function(){x(t)}},n)}))),t?Object(a.cloneElement)(y.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):o.a.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))}},108:function(e,t,n){"use strict";var a=n(0),o=n.n(a);t.a=function(e){var t=e.children,n=e.hidden,a=e.className;return o.a.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},109:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var a=n(0),o=n.n(a),r=n(106),c=n(55),l=n.n(c);function i(e){var t=e.children;return o.a.createElement("span",{className:l.a.badgeGroup},t)}function s(e){var t=e.backend,n=e.frontend,a=e.tooling;return o.a.createElement(i,null,t&&o.a.createElement(r.a,{type:"warning"},"Backend"),n&&o.a.createElement(r.a,{type:"success"},"Frontend"),a&&o.a.createElement(r.a,{type:"primary"},"Tooling"))}},88:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return u})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(3),o=n(7),r=(n(0),n(102)),c=n(109),l=n(107),i=n(108),s={title:"Decorators"},u={unversionedId:"decorators",id:"decorators",isDocsHomePage:!1,title:"Decorators",description:"Experimental decorators for common patterns.",source:"@site/docs/decorators.mdx",slug:"/decorators",permalink:"/docs/decorators",editUrl:"https://github.com/milesj/boost/edit/master/website/docs/decorators.mdx",version:"current",sidebar:"docs",previous:{title:"Debugging",permalink:"/docs/debug"},next:{title:"Events",permalink:"/docs/event"}},b=[{value:"Installation",id:"installation",children:[]},{value:"<code>@Bind</code>",id:"bind",children:[]},{value:"<code>@Debounce</code>",id:"debounce",children:[]},{value:"<code>@Deprecate</code>",id:"deprecate",children:[]},{value:"<code>@Memoize</code>",id:"memoize",children:[]},{value:"<code>@Throttle</code>",id:"throttle",children:[]}],m={toc:b};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)(c.a,{backend:!0,frontend:!0,tooling:!0,mdxType:"EnvBadges"}),Object(r.b)("p",null,"Experimental decorators for common patterns."),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)(l.a,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"yarn",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @boost/decorators\n"))),Object(r.b)(i.a,{value:"npm",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"npm install @boost/decorators\n")))),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Decorators may also be imported from ",Object(r.b)("inlineCode",{parentName:"p"},"@boost/common"),".")),Object(r.b)("h2",{id:"bind"},Object(r.b)("inlineCode",{parentName:"h2"},"@Bind")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Bind(): MethodDecorator")),Object(r.b)("p",null,"Automatically binds a class method's ",Object(r.b)("inlineCode",{parentName:"p"},"this")," context to its current instance, even when the method is\ndereferenced, which is the primary use-case for this decorator. This is an alternative to manually\n",Object(r.b)("inlineCode",{parentName:"p"},"bind()"),"ing within the constructor, or using class properties with anonymous functions."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Bind } from '@boost/decorators';\n\nclass Example {\n  @Bind()\n  static test() {\n    return this; // Class constructor\n  }\n\n  @Bind()\n  test() {\n    return this; // Class instance\n  }\n}\n\nconst example = new Example();\nconst { test } = example;\n\nexample.test() = test(); // true\n")),Object(r.b)("h2",{id:"debounce"},Object(r.b)("inlineCode",{parentName:"h2"},"@Debounce")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Debounce(delay: number): MethodDecorator")),Object(r.b)("p",null,"Delays the execution of the class method by the provided time in milliseconds. If another method\ncall occurs within this timeframe, the execution delay will be reset."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Debounce } from '@boost/decorators';\n\nclass Example {\n  @Debounce(250)\n  log() {\n    console.log('Fired!');\n  }\n}\n\nconst example = new Example();\n\nexample.log(); // Will not log\nexample.log(); // Will not log\nexample.log(); // Will log after 250ms\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Debouncing only works on methods with no return.")),Object(r.b)("h2",{id:"deprecate"},Object(r.b)("inlineCode",{parentName:"h2"},"@Deprecate")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Deprecate(message?: string): Decorator")),Object(r.b)("p",null,"Marks a class declaration, class method, class property, or method parameter as deprecated by\nlogging a deprecation message to the console. Works for both static and instance members."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Deprecate } from '@boost/decorators';\n\n@Deprecate()\nclass Example {\n  @Deprecate()\n  static property = 123;\n\n  @Deprecate('Can provide a custom message')\n  method() {}\n}\n")),Object(r.b)("h2",{id:"memoize"},Object(r.b)("inlineCode",{parentName:"h2"},"@Memoize")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Memoize(options?: MemoizeHasher | MemoizeOptions): MethodDecorator")),Object(r.b)("p",null,"Caches the return value of a class method or getter to consistently and efficiently return the same\nvalue. By default, hashes the method's arguments to determine a cache key, but can be customized\nwith a unique hashing function."),Object(r.b)("p",null,"Memoization also works on async/promise based methods by caching the promise itself. However, if the\npromise is rejected, the cache will be deleted so that subsequent calls can refresh itself."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Memoize } from '@boost/decorators';\n\nclass Example {\n  @Memoize()\n  someExpensiveOperation() {\n    // Return some value\n  }\n\n  @Memoize({ expires: 3600 })\n  async fetchInBackground() {\n    // Return some async value with an expiration time\n  }\n}\n\nconst example = new Example();\n\nexample.someExpensiveOperation(); // Will run and cache result\nexample.someExpensiveOperation(); // Will return cached result\nexample.someExpensiveOperation(); // Will return cached result\n")),Object(r.b)("p",null,"The memoize decorator supports the following options:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"cache")," (",Object(r.b)("inlineCode",{parentName:"li"},"MemoizeCache<T>"),") - A custom ",Object(r.b)("inlineCode",{parentName:"li"},"Map")," instance to store cached values. Can also be used to\npre-cache expected values."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"expires")," (",Object(r.b)("inlineCode",{parentName:"li"},"number"),") - Time in milliseconds in which to keep the cache alive (TTL). Pass ",Object(r.b)("inlineCode",{parentName:"li"},"0")," to\ncache indefinitely. Defaults to ",Object(r.b)("inlineCode",{parentName:"li"},"0"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"hasher")," (",Object(r.b)("inlineCode",{parentName:"li"},"MemoizeHasher"),") - A hashing function to determine the cache key. Is passed the method's\narguments and must return a string. If not provided, arguments are hashed using\n",Object(r.b)("inlineCode",{parentName:"li"},"JSON.stringify()"),".")),Object(r.b)("h2",{id:"throttle"},Object(r.b)("inlineCode",{parentName:"h2"},"@Throttle")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Throttle(delay: number): MethodDecorator")),Object(r.b)("p",null,"Throttles the execution of a class method to only fire once within every delay timeframe (in\nmilliseconds). Will always fire on the first invocation."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Throttle } from '@boost/decorators';\n\nclass Example {\n  @Throttle(100)\n  log() {\n    console.log('Fired!');\n  }\n}\n\nconst example = new Example();\n\nexample.log(); // Will log\nexample.log(); // Will not log\nexample.log(); // Will not log\n\n// 100ms pass\nexample.log(); // Will log\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Throttling only works on methods with no return.")))}p.isMDXComponent=!0}}]);